name: Publish to host

env:
  ZOLA_VERSION: 0.20.0

on:
 workflow_dispatch:
 push:
   branches:
     - main
jobs:
  publish:
    runs-on: ubuntu-latest
    name: Publish to host
    env: 
      SSHPASS: "${{secrets.SFTP_PASS}}"
      TMP_PATH: /home/dh_zzxxrk/website-upload-tmp
    steps:
      - name: Echo test
        run: | 
           echo '${{env.TMP_PATH}}'

      - name: Get dependencies
        run: | 
           apt update -y && apt install -y sshpass openssh-client lftp sudo

      - name: Checkout repo
        uses: actions/checkout@v4
        fetch-depth: 0

      - name: Setup Zola
        run: |
          wget -O zola.tar.gz -c https://github.com/getzola/zola/releases/download/v${ZOLA_VERSION}/zola-v${ZOLA_VERSION}-x86_64-unknown-linux-gnu.tar.gz
          tar -zxvf zola.tar.gz

      - name: Build Site
        run: | 
          ./zola build

      - name: Prep ssh config for deployer
        run: | 
           mkdir -p ~/.ssh
           touch ~/.ssh/config

      - name: Clear out old remote temp folder
        run: sshpass -e ssh -o "StrictHostKeyChecking=no" ${{secrets.SFTP_USER}}@${{secrets.SFTP_HOST}} 'rm -rf ${{env.TMP_PATH}} && mkdir -p ${{env.TMP_PATH}}';

      # Current primary web host (DreamHost) backed by Fastly CDN
      # Delta sync continually complains about fetch-depth, so we're manually swapping the site in/out with the above/below tmp folders instead.
      - name: "Deploy to DreamHost SFTP"
        uses: https://github.com/milanmk/actions-file-deployer@3cf188f493103b5f12f11221186f8fbd07f2be10
        with:
          remote-protocol: "sftp"
          remote-host: "${{secrets.SFTP_HOST}}"
          remote-user: "${{secrets.SFTP_USER}}"
          remote-password: "${{secrets.SFTP_PASS}}"
          local-path: "./public"
          remote-path: "${{env.TMP_PATH}}"
          sync: "full" # full for initial, delta with fetch-depth: 0 during checkout for future
          #debug: "true"

      - name: Overwrite live website folder with temp folder
        run: sshpass -e ssh -o "StrictHostKeyChecking=no" ${{secrets.SFTP_USER}}@${{secrets.SFTP_HOST}} 'rm -rf ${{vars.SFTP_PATH}} && mv ${{env.TMP_PATH}} ${{vars.SFTP_PATH}}';
